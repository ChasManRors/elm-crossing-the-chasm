var _user$project$Exercise41$Model = F2(
	function (a, b) {
		return {calories: a, input: b};
	});
var _user$project$Exercise41$initModel = A2(_user$project$Exercise41$Model, 0, 0);
var _user$project$Exercise41$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'AddCalorie':
				return _elm_lang$core$Native_Utils.update(
					model,
					{calories: model.calories + model.input, input: 0});
			case 'Input':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						input: A2(
							_elm_lang$core$Result$withDefault,
							0,
							_elm_lang$core$String$toInt(_p0._0))
					});
			default:
				return _user$project$Exercise41$initModel;
		}
	});
var _user$project$Exercise41$Clear = {ctor: 'Clear'};
var _user$project$Exercise41$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _user$project$Exercise41$AddCalorie = {ctor: 'AddCalorie'};
var _user$project$Exercise41$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h3,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Total Calories: ',
							_elm_lang$core$Basics$toString(model))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$p,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('story'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Once'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Exercise41$Input),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$value(
										_elm_lang$core$Native_Utils.eq(model.input, 0) ? '' : _elm_lang$core$Basics$toString(model.input)),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('button'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$Exercise41$AddCalorie),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Add'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('button'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(_user$project$Exercise41$Clear),
										_1: {ctor: '[]'}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Clear'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Exercise41$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$Exercise41$initModel, update: _user$project$Exercise41$update, view: _user$project$Exercise41$view})();
